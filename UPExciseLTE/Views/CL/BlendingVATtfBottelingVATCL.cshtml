@model UPExciseLTE.Models.TankTransferDetail

@{
    ViewBag.Title = "BlendingVATtfBottelingVAT";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string str = ViewBag.Msg;
    if (!string.IsNullOrEmpty(str))
    {
        <script type="text/javascript"> var msg = '@ViewBag.Msg'; alert(msg);</script>
    }
}
        <style>
            .rTable {
                display: table;
                width: 100%;
            }

            .rTableRow {
                display: table-row;
            }

            .rTableHeading {
                display: table-header-group;
                background-color: #ddd;
            }

            .rTableCell, .rTableHead {
                display: table-cell;
                padding: 3px 10px;
                border: 1px solid #999999;
            }

            .rTableHeading {
                display: table-header-group;
                background-color: #ddd;
                font-weight: bold;
            }

            .rTableFoot {
                display: table-footer-group;
                font-weight: bold;
                background-color: #ddd;
            }

            .rTableBody {
                display: table-row-group;
            }
        </style>
@using (Html.BeginForm("BlendingVATtfBottelingVATCL", "CL", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="page-content-inner">
        <div class="row">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <span><i class="fa fa-gift"></i>&nbsp; Blending VAT Transfer To Bottling VAT&nbsp;(@UserSession.LoggedInUserName.ToString())</span>
                        </div>
                    </div>
                    <div class="portlet-body form" style="background-color:#f5f5f5">
                        <div class="form-body">
                            <div class="row">
                                <div class="form-group col-md-3">
                                    <label class="control-label">Blending VAT<b style="color:red; font-weight:800">*</b></label>
                                    @Html.DropDownListFor(m => m.BlendingId, (IEnumerable<SelectListItem>)ViewBag.BlendingVAT, new { @id = "ddlBlendingId", @class = "form-control" })

                                </div>
                                <div class="form-group col-md-3">
                                    <label class="control-label">Brand (In Blending VAT)</label>
                                    @Html.TextBox("txtBlendingBrand", "", new { @id = "txtBlendingBrand", @class = "form-control", @disabled = "disabled" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label class="control-label">Blending Spirit Type</label>
                                    @Html.TextBox("txtBlendingSpiritType", "", new { @id = "txtBlendingSpiritType", @class = "form-control", @disabled = "disabled" })
                                    <input type="hidden" value="-1" id="hfspritid" />
                                </div>
                                <div class="form-group col-md-3">
                                    <label class="control-label">Batch No (in Blending Vat)</label>
                                    @Html.TextBox("txtBlendingBatch", "", new { @id = "txtBlendingBatch", @class = "form-control", @disabled = "disabled" })
                                    <input type="hidden" value="-1" id="hfspritid" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-3">
                                    <label class="control-label">Bottling VAT<b style="color:red; font-weight:800">*</b></label>
                                    @Html.DropDownListFor(m => m.BottlingVATId, (IEnumerable<SelectListItem>)ViewBag.BottelingVAT, new { @id = "ddlBottelingId", @class = "form-control" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label class="control-label">Brand (In Bottling VAT)</label>
                                    @Html.TextBox("txtBottlingBrand", "", new { @id = "txtBottlingBrand", @class = "form-control", @disabled = "disabled" })
                                    <input type="hidden" id="hfbrandid" />
                                    <input type="hidden" id="hfbottlebrandid" />
                                </div>
                                <div class="form-group col-md-3">
                                    <label class="control-label">Bottling VAT Capacity</label>
                                    @Html.TextBox("txtBottelingCapacity", "", new { @id = "txtBottelingCapacity", @class = "form-control", @disabled = "disabled" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label class="control-label"> Batch No (in Bottling VAT)</label>
                                    @Html.TextBox("txtBottlingbatchNo", "", new { @id = "txtBottlingbatchNo", @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>



                            <div class="rTable">
                                <div class="rTableRow">
                                    <div class="rTableHead"></div>
                                    <div class="rTableHead"><span style="font-weight: bold;">BL</span></div>
                                    <div class="rTableHead"><span style="font-weight: bold;">Strength</span></div>
                                    <div class="rTableHead"><span style="font-weight: bold;">AL=((BL*Strength)/100)</span></div>
                                </div>
                                <div class="rTableRow">
                                    <div class="rTableCell"><strong>Blending VAT (Opening Balance) A</strong></div>
                                    <div class="rTableCell">
                                        @Html.TextBox("txtBlendingBal", "", new { @id = "txtBlendingBal", @class = "form-control", @disabled = "disabled" , @style = "width:160px" })
                                    </div>
                                    <div class="rTableCell">@Html.TextBox("txtBlendingOpS", "", new { @id = "txtBlendingOpS", @class = "form-control", @disabled = "disabled" , @style = "width:160px" })</div>
                                    <div class="rTableCell">   @Html.TextBox("txtBlendingOpAL", "", new { @id = "txtBlendingOpAL", @class = "form-control", @disabled = "disabled" , @style = "width:160px" })</div>
                                </div>
                                <div class="rTableRow">
                                    <div class="rTableCell"><strong>Blending VAT (Balance After Transfer) B</strong></div>
                                    <div class="rTableCell">@Html.TextBox("txtBlendingABL", "", new { @id = "txtBlendingABL", @class = "form-control", @onkeyup = "sumtransfer()", @onkeypress = "return isfloatNumber(this, event);", @style = "width:160px" }) </div>
                                    <div class="rTableCell">  @Html.TextBox("txtBlendingAStrength", "", new { @id = "txtBlendingAStrength", @class = "form-control", @onkeyup = "sumtransfer()", @onkeypress = "return isfloatNumber(this, event);", @style = "width:160px" })</div>
                                    <div class="rTableCell"> @Html.TextBox("txtBlendingAAL", "", new { @id = "txtBlendingAAL", @class = "form-control", @onkeyup = "sumtransfer()", @onkeypress = "return isfloatNumber(this, event);", @style = "width:160px",@disabled="disabled" })</div>
                                </div>
                                <div class="rTableRow">
                                    <div class="rTableCell"><strong>Net Transfer (A-B)</strong></div>
                                    <div class="rTableCell">  @Html.TextBox("txtNetBL", "", new { @id = "txtNetBL", @class = "form-control", @disabled = "disabled", @style = "width:160px" })</div>
                                    <div class="rTableCell">@Html.TextBox("txtNetStr", "", new { @id = "txtNetStr", @class = "form-control", @disabled = "disabled", @style = "width:160px" })</div>
                                    <div class="rTableCell"> @Html.TextBox("txtNetAL", "", new { @id = "txtNetAL", @class = "form-control", @disabled = "disabled", @style = "width:160px" })</div>
                                </div>
                                <div class="rTableRow">
                                    <div class="rTableCell"><strong>Bottling VAT (Opening Balance) X</strong></div>

                                    <div class="rTableCell">@Html.TextBox("txtBottelingBal", "", new { @id = "txtBottelingBal", @class = "form-control", @disabled = "disabled", @style = "width:160px" })</div>

                                    <div class="rTableCell">@Html.TextBox("txtBottelingOpStrength", "", new { @id = "txtBottelingOpStrength", @class = "form-control", @disabled = "disabled", @style = "width:160px" })</div>
                                    <div class="rTableCell"> @Html.TextBox("txtBottelingOpAL", "", new { @id = "txtBottelingOpAL", @class = "form-control", @disabled = "disabled" , @style = "width:160px" })</div>
                                </div>

                                <div class="rTableRow">
                                    <div class="rTableCell"><strong>Bottling VAT (After Recevied) Y</strong></div>
                                    <div class="rTableCell"> @Html.TextBox("txtBottlingABL", "", new { @id = "txtBottlingABL", @class = "form-control", @onkeyup = "sumreciver()", @onkeypress = "return isfloatNumber(this, event);", @style = "width:160px" })</div>
                                    <div class="rTableCell">@Html.TextBox("txtBottlingAS", "", new { @id = "txtBottlingAS", @class = "form-control", @onkeyup = "sumreciver()", @onkeypress = "return isfloatNumber(this, event);" , @style = "width:160px" })</div>
                                    <div class="rTableCell"> @Html.TextBox("txtBottlingAAL", "", new { @id = "txtBottlingAAL", @class = "form-control", @onkeyup = "sumreciver()", @onkeypress = "return isfloatNumber(this, event);" , @style = "width:160px" , @disabled = "disabled" })</div>
                                </div>
                                <div class="rTableRow">
                                    <div class="rTableCell"><strong>Net Receive (X-Y)</strong></div>
                                    <div class="rTableCell">@Html.TextBox("txtNetRBL", "", new { @id = "txtNetRBL", @class = "form-control", @disabled = "disabled" , @style = "width:160px" })</div>
                                    <div class="rTableCell">
                                        @Html.TextBox("txtNetRStr", "", new { @id = "txtNetRStr", @class = "form-control", @disabled = "disabled", @style = "width:160px" })

                                      
                                    </div>
                                    <div class="rTableCell"> @Html.TextBox("txtNetRAL", "", new { @id = "txtNetRAL", @class = "form-control", @disabled = "disabled" , @style = "width:160px" })</div>
                                </div>
                                <div class="rTableRow">
                                    <div class="rTableCell"><strong>Wastage =(Net Transfer  - Net Received)</strong></div>
                                    <div class="rTableCell"> @Html.TextBox("txtWBL", "", new { @id = "txtWBL", @class = "form-control", @disabled = "disabled", @style = "width:160px" })</div>
                                    <div class="rTableCell">  @Html.TextBox("txtWS", "", new { @id = "txtWS", @class = "form-control hide", @disabled = "disabled" , @style = "width:160px" })</div>
                                    <div class="rTableCell">
                                        @Html.TextBox("txtWAL", "", new { @id = "txtWAL", @class = "form-control", @disabled = "disabled", @style = "width:160px" })

                                      
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-12">
                                    <label class="control-label">Remark<b style="color:red; font-weight:800">*</b></label>
                                    @Html.TextAreaFor(model => model.Remark, new { @class = "form-control", @id = "txtRemark", @required = "required", @maxlength = "100" })
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <center>
                            <div class="form-actions">
                                <button type="button" class="btn green" onclick="save()">Issue Spirit</button>
                                <button type="button" class="btn danger" style="background-color:crimson; color:white">Reset</button>
                            </div>
                        </center>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    function Validation() {
        if (document.getElementById("txtWastageBL").value.trim() == "") {
            document.getElementById("txtWastageBL").value = 0;
        }
        var UnitTankId = $('#ddlUnitTank').val();
        if (UnitTankId == "-1") {
            alert("Please Select Unit Tank");
            $('#ddlUnitTank').focus();
            return false;
        }
        var BottlingTank = $('#ddlBBT').val();
        if (BottlingTank == "-1") {
            alert("Please Select Bottling Tank");
            $('#ddlBBT').focus();
            return false;
        }
        if (document.getElementById("txtTransferBL").value.trim() == "" || parseFloat(document.getElementById("txtTransferBL").value.trim()) <= 0) {
            alert("Please Enter Valid Transfer Bulk Litre");
            document.getElementById("txtTransferBL").focus();
            return false;
        }
    }
    function isfloatNumber(txt, evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode == 46) {
            //Check if the text already contains the . character
            if (txt.value.indexOf('.') === -1) {
                return true;
            } else {
                return false;
            }
        } else {
            if (charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;
        }
        return true;
    }
    $('#ddlBlendingId').change(function () {
        var UnitTankId = $('#ddlBlendingId').val();
        if (UnitTankId != "-1") {
            UnitTankChange(UnitTankId);
        }
    });
    function UnitTankChange(UnitTankId) {
        $.ajax({
            url: '/CL/GetBlendingVATDetails',
            data: { 'BVId': UnitTankId },
            datatype: "json",
            type: "GET",
            success: function (data) {

                document.getElementById("txtBlendingBrand").value = data[0];
               // document.getElementById("txtBlendingCapacity").value = data[1];
                document.getElementById("txtBlendingBal").value = data[4];
                document.getElementById("txtBlendingOpS").value = data[2];
                document.getElementById("txtBlendingOpAL").value = data[3];
                document.getElementById("hfbrandid").value = data[6];
                document.getElementById("txtBlendingSpiritType").value = data[5];
                document.getElementById("txtBlendingBatch").value = data[7];
            },
            error: function (data) {
                alert("Error in GetUnitTankForDDl Loading");
            }
        });
    }
    $('#ddlBottelingId').change(function () {
        var BBTId = $('#ddlBottelingId').val();
        if (BBTId != "-1") {
            BBTChange(BBTId);
        }
    });
    function BBTChange(BBTId) {
        $.ajax({
            url: '/CL/GetBottlingTankdetails',
            data: { 'BTID': BBTId },
            datatype: "json",
            type: "GET",
            success: function (data) {
                //var res = data.split(",");
                document.getElementById("txtBottlingBrand").value = data[0];
                document.getElementById("txtBottelingCapacity").value = data[1];
                document.getElementById("txtBottelingBal").value = data[4];
                document.getElementById("txtBottelingOpStrength").value = data[2];
                document.getElementById("txtBottelingOpAL").value = data[3];
                document.getElementById("hfbottlebrandid").value = data[6];
                document.getElementById("txtBottlingbatchNo").value = data[7];
            },
            error: function (data) {
                alert("Error in GetBBTForDDl Loading");
            }
        });
    }
    function CheckTransfer() {
        var txtdipForm = parseFloat(document.getElementById("txtDipFrom").value);
        var txtdipTo = parseFloat(document.getElementById("txtDipTo").value);
        if (txtdipTo > txtdipForm) {
            alert("Max Transfer BL is " + txtdipForm);
            document.getElementById("txtDipTo").value = txtdipForm;

        }
        document.getElementById("txtWastageBL").value = txtdipForm - txtdipTo;
    }

    function save() {
        if (document.getElementById("ddlBlendingId").value.trim() == "-1") {
            document.getElementById("ddlBlendingId").focus();
            alert("select Blending VAT");
            return;
        }
        if (document.getElementById("ddlBottelingId").value.trim() == "-1") {
            document.getElementById("ddlBottelingId").focus();
            alert("select Bottling VAT");
            return;
        }

        
        
        if (document.getElementById("txtBlendingBal").value.trim() == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat opening balance BL should not be blank ");
            return;
        }
        if (parseFloat( document.getElementById("txtBlendingBal").value.trim()) <0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat opening balance BL must be greater than zero ");
            return;
        }
        if ((document.getElementById("txtBlendingOpS").value.trim()) =="") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat opening balance strength should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBlendingOpS").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat opening balance strength must be greater than zero ");
            return;
        }
        if ((document.getElementById("txtBlendingOpAL").value.trim()) =="") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat opening balance AL should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBlendingOpAL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat opening balance AL must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtBlendingABL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat After Tranfer BL should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBlendingABL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat After Tranfer BL must be greater than zero ");
            return;
        }
        if ((document.getElementById("txtBlendingAStrength").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat After Tranfer Strength should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBlendingAStrength").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat After Tranfer Strength must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtBlendingAAL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat After Tranfer AL should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBlendingAAL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Blending Vat After Tranfer AL must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtNetBL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Transfer BL should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtNetBL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Transfer BL must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtNetStr").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Transfer Strength should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtNetStr").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Transfer Strength must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtNetAL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Transfer AL should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtNetAL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Transfer AL must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtBottelingBal").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (Opening Balance) BL should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBottelingBal").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (Opening Balance) BL must be greater than zero ");
            return;
        }
        if (parseFloat(document.getElementById("txtBottelingBal").value.trim()) != 0) {
            if (document.getElementById("hfbrandid").value.trim() != document.getElementById("hfbottlebrandid").value.trim()) {
                //document.getElementById("ddlBottelingId").focus();
                alert(" bottling Vat brand must be same to blending Vat brand ");
                return;
            }
            if (document.getElementById("txtBlendingBatch").value.trim() != document.getElementById("txtBottlingbatchNo").value.trim()) {
                alert(" bottling Vat batch No must be same to blending Vat batch No ");
                return;
            }
        }

        if ((document.getElementById("txtBottelingOpStrength").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (Opening Balance) Strength should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBottelingOpStrength").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (Opening Balance) Strength must be greater than zero ");
            return;
        }


        if ((document.getElementById("txtBottelingOpAL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (Opening Balance) AL should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBottelingOpAL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (Opening Balance) AL must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtBottlingABL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (After Recevied)) BL should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBottlingABL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (After Recevied)) BL must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtBottlingAS").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (After Recevied)) Strength should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBottlingAS").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (After Recevied)) Strength must be greater than zero ");
            return;
        }
        if ((document.getElementById("txtBottlingAAL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (After Recevied)) AL should not be blank ");
            return;
        }
        if (parseFloat(document.getElementById("txtBottlingAAL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Bottling VAT (After Recevied)) AL must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtNetRBL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Receive BL Should not be Blank");
            return;
        }
        if (parseFloat(document.getElementById("txtNetRBL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Receive BL  must be greater than zero");

           // alert("Bottling VAT (After Tranfer)) AL must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtNetRStr").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Receive Strength Should not be Blank");
            return;
        }
        if (parseFloat(document.getElementById("txtNetRStr").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Receive Strength  must be greater than zero");

            // alert("Bottling VAT (After Tranfer)) AL must be greater than zero ");
            return;
        }


        if ((document.getElementById("txtNetRAL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Receive AL Should not be Blank");
            return;
        }
        if (parseFloat(document.getElementById("txtNetRAL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Net Receive AL  must be greater than zero");

            // alert("Bottling VAT (After Tranfer)) AL must be greater than zero ");
            return;
        }


        if ((document.getElementById("txtWBL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Wastage BL Should not be Blank");
            return;
        }
        if (parseFloat(document.getElementById("txtWBL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Wastage BL  must be greater than zero");

            // alert("Bottling VAT (After Tranfer)) AL must be greater than zero ");
            return;
        }

        if ((document.getElementById("txtWAL").value.trim()) == "") {
            //document.getElementById("ddlBottelingId").focus();
            alert("Wastage AL Should not be Blank");
            return;
        }
        if (parseFloat(document.getElementById("txtWAL").value.trim()) < 0) {
            //document.getElementById("ddlBottelingId").focus();
            alert("Wastage AL  must be greater than zero");

            // alert("Bottling VAT (After Tranfer)) AL must be greater than zero ");
            return;
        }

        var Objform = {
            "TransferId": -1,
            "RVId": -1,
            "ImportPassNo": " ",
            "SVId": -1,//document.getElementById("ddlIssuedFromSVId").value.trim(),
            "BlendingId": document.getElementById("ddlBlendingId").value.trim(),
            "BottlingVATId": document.getElementById("ddlBottelingId").value.trim(),
            "SpiritTypeId": -1,// document.getElementById("hfspritid").value.trim(),
            "BatchNo": document.getElementById("txtBlendingBatch").value.trim(),
            "BrandID": document.getElementById("hfbrandid").value.trim(),//document.getElementById("").value.trim(),
            "TransactionType": "BB",
            "SourceofSpirit": -1,//document.getElementById("ddlsource_sp").value.trim(),
            "ReceiverType": " ",//document.getElementById("ddlsource_spR").value.trim(),
            
            "PrevBalanceBlendingVBL": document.getElementById("txtBlendingBal").value.trim(),
            "IssueBL": document.getElementById("txtNetBL").value.trim(),
            "CurrentBalanceReceiverVBL": 0,//document.getElementById("txtCurrentBalanceReceiverVBL").value.trim(),
            "CurrentBalanceSVBL": 0,//document.getElementById("txtStorageABL").value.trim(),
            "CurrentBalanceBledingVBL": document.getElementById("txtBlendingABL").value.trim(),
            "CurrentBalanceBottlingVBL": document.getElementById("txtBottlingABL").value.trim(),
            "PrevReceiverVAL": 0,//document.getElementById("txtPrevReceiverVAL").value.trim(),
            "PrevStorageVAL": 0,//document.getElementById("txSVAL").value.trim(),
            "PrevBlendingVAL": document.getElementById("txtBlendingOpAL").value.trim(),
            "PrevBottlingVAL": document.getElementById("txtBottelingOpAL").value.trim(),
            "IssueAL": document.getElementById("txtNetAL").value.trim(),
            "CurrentReceiverVAL": 0,//document.getElementById("txtCurrentReceiverVAL").value.trim(),
            "CurrentStorageVAL": 0,//document.getElementById("txtStorageAAL").value.trim(),
            "CurrentBlendingVAL": document.getElementById("txtBlendingAAL").value.trim(),
            "CurrentBottlingVAL": document.getElementById("txtBottlingAAL").value.trim(),
            "PrevReceiverVStrength": 0,// document.getElementById("txtPrevReceiverVStrength").value.trim(),
            "PrevStorageVStrength": 0,//document.getElementById("txtstoragevatstrength").value.trim(),
            "PrevBlendingVStrength": document.getElementById("txtBlendingOpS").value.trim(),
            "PrevBottlingVStrength": document.getElementById("txtBottlingAS").value.trim(),
            "CurrentReceiverVStrength": 0,
            "CurrentStorageVStrength": 0,//document.getElementById("txtStorageASt").value.trim(),
            "CurrentBlendingVStrength": document.getElementById("txtBlendingAStrength").value.trim(),
            "CurrentBottlingVStrength": document.getElementById("txtBottlingAS").value.trim(),
            "WastageBL": document.getElementById("txtWBL").value.trim(),
            "WastageStrength": document.getElementById("txtWS").value.trim(),
            "WastageAL": document.getElementById("txtWAL").value.trim(),
            //"TransferDate": document.getElementById("").value.trim(),
            // "IsFinal": document.getElementById("").value.trim(),
            "Remark": document.getElementById("txtRemark").value.trim(),
            "IssueStength": document.getElementById("txtNetStr").value.trim(),
        }

        $.ajax({
            url: '/CL/InsertUpdateTankTranfer',
            data: JSON.stringify({ Objform: Objform }),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "Record Save..") {
                    alert(data);
                    location.reload();
                }
                else {
                    alert(data);
                }


            }
        });
    }
    function sumreciver() {
        var Openingbl = 0, OpeningAL = 0, Openingstrength = 0, closingbl = 0, closingal = 0, closingstrength = 0;
        if (document.getElementById("txtBottelingBal").value != "") {
            Openingbl = parseFloat(document.getElementById("txtBottelingBal").value)
        }
        if (document.getElementById("txtBottelingOpStrength").value != "") {
            Openingstrength = parseFloat(document.getElementById("txtBottelingOpStrength").value)
        }
        if (document.getElementById("txtBottelingOpAL").value != "") {
            OpeningAL = parseFloat(document.getElementById("txtBottelingOpAL").value)
        }
        if (document.getElementById("txtBottlingABL").value != "") {
            closingbl = parseFloat(document.getElementById("txtBottlingABL").value)
        }
        if (document.getElementById("txtBottlingAS").value != "") {
            closingstrength = parseFloat(document.getElementById("txtBottlingAS").value)
        }
        //if (document.getElementById("txtBottlingAAL").value != "") {
        //    closingal = parseFloat(document.getElementById("txtBottlingAAL").value)
        //}
        document.getElementById("txtBottlingAAL").value = parseFloat((closingstrength * closingbl) / 100).toFixed(2).toString().trim();

        document.getElementById("txtNetRBL").value = parseFloat(parseFloat(closingbl) - parseFloat(Openingbl)).toFixed(2).toString().trim();
        document.getElementById("txtNetRStr").value = parseFloat(parseFloat(closingstrength)).toFixed(2).toString().trim(); //parseFloat(parseFloat(closingstrength) - parseFloat(Openingstrength)).toFixed(2).toString().trim();
        document.getElementById("txtNetRAL").value = parseFloat((parseFloat(document.getElementById("txtNetRBL").value) * parseFloat(document.getElementById("txtNetRStr").value))/100).toFixed(2).toString().trim();
        sumwaste();
    }
    function sumtransfer() {
        var Openingbl = 0, OpeningAL = 0, Openingstrength = 0, closingbl = 0, closingal = 0, closingstrength = 0;
        if (document.getElementById("txtBlendingBal").value != "") {
            Openingbl = parseFloat(document.getElementById("txtBlendingBal").value)
        }
        if (document.getElementById("txtBlendingOpS").value != "") {
            Openingstrength = parseFloat(document.getElementById("txtBlendingOpS").value)
        }
        if (document.getElementById("txtBlendingOpAL").value != "") {
            OpeningAL = parseFloat(document.getElementById("txtBlendingOpAL").value)
        }
        if (document.getElementById("txtBlendingABL").value != "") {
            closingbl = parseFloat(document.getElementById("txtBlendingABL").value)
        }
        if (document.getElementById("txtBlendingAStrength").value != "") {
            closingstrength = parseFloat(document.getElementById("txtBlendingAStrength").value)
        }
        //if (document.getElementById("txtBlendingAAL").value != "") {
        //    closingal = parseFloat(document.getElementById("txtBlendingAAL").value)
        //}

        document.getElementById("txtBlendingAAL").value = parseFloat((closingstrength * closingbl) / 100).toFixed(2).toString().trim();

        document.getElementById("txtNetBL").value = parseFloat(parseFloat(Openingbl) - parseFloat(closingbl)).toFixed(2).toString().trim();
        document.getElementById("txtNetStr").value = parseFloat(parseFloat(Openingstrength)).toFixed(2).toString().trim(); // parseFloat(parseFloat(Openingstrength) - parseFloat(closingstrength)).toFixed(2).toString().trim();
        document.getElementById("txtNetAL").value = parseFloat((parseFloat(document.getElementById("txtNetBL").value) * parseFloat(document.getElementById("txtNetStr").value ))/100).toFixed(2).toString().trim();
        sumwaste();
    }
    function sumwaste() {
        var Openingbl = 0, OpeningAL = 0, Openingstrength = 0, closingbl = 0, closingal = 0, closingstrength = 0;
        if (document.getElementById("txtNetBL").value != "") {
            Openingbl = parseFloat(document.getElementById("txtNetBL").value)
        }
        if (document.getElementById("txtNetStr").value != "") {
            Openingstrength = parseFloat(document.getElementById("txtNetStr").value)
        }
        if (document.getElementById("txtNetAL").value != "") {
            OpeningAL = parseFloat(document.getElementById("txtNetAL").value)
        }
        if (document.getElementById("txtNetRBL").value != "") {
            closingbl = parseFloat(document.getElementById("txtNetRBL").value)
        }
        if (document.getElementById("txtNetStr").value != "") {
            closingstrength = parseFloat(document.getElementById("txtNetStr").value)
        }
        if (document.getElementById("txtNetAL").value != "") {
            closingal = parseFloat(document.getElementById("txtNetAL").value)
        }

        document.getElementById("txtWBL").value = parseFloat(parseFloat(Openingbl) - parseFloat(closingbl)).toFixed(2).toString().trim();
        document.getElementById("txtWS").value = parseFloat(closingstrength).toFixed(2).toString().trim()//parseFloat(parseFloat(Openingstrength) - parseFloat(closingstrength)).toFixed(2).toString().trim();
        document.getElementById("txtWAL").value = parseFloat((parseFloat(document.getElementById("txtWBL").value) * parseFloat(document.getElementById("txtWS").value))/100).toFixed(2).toString().trim();
    }
</script>


