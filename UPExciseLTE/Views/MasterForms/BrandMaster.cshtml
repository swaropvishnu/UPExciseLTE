@model  UPExciseLTE.Models.BrandMaster
@{
    ViewBag.Title = "Brand Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (ViewBag.Msg != null && ViewBag.Msg != string.Empty)
    {
        <script type="text/javascript"> var msg = '@ViewBag.Msg'; alert(msg);</script>
    }
}
<script type="text/javascript">
    var specialKeys = new Array();
    specialKeys.push(47); // for Forward Slash(/)
    specialKeys.push(8); //Backspace
    specialKeys.push(9); // Tab
    specialKeys.push(37); // for left Arrow
    //  specialKeys.push(39); // for Right Arrow
    function IsNumeric(e) {
        var keyCode = e.which ? e.which : e.keyCode
        var ret = ((keyCode >= 48 && keyCode <= 57) || specialKeys.indexOf(keyCode) != -1); // For Decimal To All Number
        if (ret == false) {
            //alert("Only numaric value allowed.");
        }
        return ret;
    }
    function isfloatNumber(txt, evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode == 46) {
            //Check if the text already contains the . character
            if (txt.value.indexOf('.') === -1) {
                return true;
            } else {
                return false;
            }
        } else {
            if (charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;
        }
        return true;
    }

    function setSelectedValue(selectObj, valueToSet) {
        for (var i = 0; i < selectObj.options.length; i++) {
            if (selectObj.options[i].text == valueToSet) {
                selectObj.options[i].selected = true;
                return;
            }
        }
    }
    window.onload = function () {
        var LiqType = $('#ddlLiquorType').val();
        if (LiqType=="CL") {
            FillAlcoholStrength();    
        }
        var LiquorType = $('#ddlState').val();
        if (LiquorType == "27") {
            if (document.getElementById("txtQuantityInBottleML") != null) {
                document.getElementById("txtQuantityInBottleML").style.display = "none";
                if (document.getElementById("txtQuantityInBottleML").value != "") {
                    $('#ddlQuantityInBottleML').val(document.getElementById("txtQuantityInBottleML").value);
                }
                document.getElementById("ddlQuantityInBottleML").style.display = "";
            }
        }
        else {
            if (document.getElementById("txtQuantityInBottleML") != null) {
                document.getElementById("txtQuantityInBottleML").style.display = "";
                document.getElementById("ddlQuantityInBottleML").style.display = "none";
            }
        }
    }
    function Validation() {
        document.getElementById("txtBrandName").value = document.getElementById("txtBrandName").value.trim();
        document.getElementById("txtBrandRegistrationNumber").value = document.getElementById("txtBrandRegistrationNumber").value.trim();
        document.getElementById("txtStrength").value = document.getElementById("txtStrength").value.trim();
        document.getElementById("txtLicenseNo").value = document.getElementById("txtLicenseNo").value.trim();
        document.getElementById("txtQuantityInCase").value = document.getElementById("txtQuantityInCase").value.trim();
        
        document.getElementById("txtRemarks").value = document.getElementById("txtRemarks").value.trim(); 
        var ddlState = $('#ddlState').val();
        if (ddlState == -1)
        {
            alert("Please Select State First");
            $('#ddlState').focus();
            return false;
        }
        if (document.getElementById("txtBrandName").value == "")
        {
            alert("Please Enter Brand Name");
            document.getElementById("txtBrandName").focus();
            return false;
        }
        if (document.getElementById("txtBrandRegistrationNumber").value == "") {
            alert("Please Enter Brand Registration Number");
            document.getElementById("txtBrandRegistrationNumber").focus();
            return false;
        }
        if (document.getElementById("txtStrength").value == 0)
        {
            alert("Please Enter Strength");
            document.getElementById("txtStrength").focus();
            return false;
        }
        else
        {
            try
            {
                parseFloat(document.getElementById("txtStrength").value);
                if (parseFloat(document.getElementById("txtStrength").value) < 0)
                {
                    alert("Please Enter Valid Strength");
                    document.getElementById("txtStrength").focus();
                    return false;
                }
            }
            catch {
                alert("Please Enter Valid Strength");
                document.getElementById("txtStrength").focus();
                return false;
            }
        }
        if (document.getElementById("txtLicenseNo").value == "") {
            alert("Please Enter License No");
            document.getElementById("txtLicenseNo").focus();
            return false;
        }
        if (document.getElementById("txtQuantityInCase").value == "" || document.getElementById("txtQuantityInCase").value == 0)
        {
            alert("Please Enter Quantity in Case");
            document.getElementById("txtQuantityInCase").focus();
            return false;
        }
        else
        {
            try
            {
                parseInt(document.getElementById("txtQuantityInCase").value);
            }
            catch{alert("Please Enter valid Quantity");
                document.getElementById("txtQuantityInCase").focus();
                return false;
            }
        }
        if (document.getElementById("txtQuantityInBottleML").value == 0 || document.getElementById("txtQuantityInBottleML").value == "") {
            alert("Please Enter Quantity In Bottle ML")
            document.getElementById("txtQuantityInBottleML").focus();
            return false;
        }
        if (document.getElementById("txtXFactoryPrice").value == 0 || document.getElementById("txtXFactoryPrice").value == "")
        {
            alert("Please Enter X Factory Price")
            document.getElementById("txtXFactoryPrice").focus();
            return false;
        }
        else
        {
            try
            {
                parseFloat("Please Enter X Factory Price");
            }
            catch
            {
                alert("Please Enter valid X Factory Price");
                document.getElementById("txtXFactoryPrice").focus();
                return false;
            }
        }
    }
</script>
@using (Html.BeginForm("BrandMaster", "MasterForms", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="page-content-inner">
        <div class="row">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            @if (Model.SPType == 1)
                            {
                                <span><i class="fa fa-gift"></i>&nbsp; Brand Registration&nbsp;(@UserSession.LoggedInUserName.ToString())</span>
                            }
                            else
                            {
                                <span><i class="fa fa-gift"></i>&nbsp; Update Brand&nbsp; (@UserSession.LoggedInUserName.ToString())</span>
                            }
                        </div>
                    </div>
                    <div class="portlet-body form" style="background-color:#f5f5f5">
                        <div class="form-body">
                            @Html.HiddenFor(m => m.BrandId)
                            @Html.HiddenFor(m => m.brandID_incrpt)
                            @Html.HiddenFor(m => m.SPType)
                            <div class="row">
                                <div class="form-group col-md-4">
                                   
                                    @if (UserSession.LoggedInUserLevelId != "50" && UserSession.LoggedInUserLevelId != "55")
                                    {
                                        <label class="control-label">
                                            State<b style="color:red; font-weight:800">*</b>
                                        </label>
                                    }
                                    else
                                    {
                                        <label class="control-label">
                                            State / Location of Parent Unit<b style="color:red; font-weight:800">*</b>
                                        </label>
                                    }

                                    <div>
                                        @Html.DropDownListFor(m => m.StateId, (IEnumerable<SelectListItem>)ViewBag.StateList, new { @id = "ddlState", @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group col-md-4" style="display:none;">
                                    <label class="control-label">Brewery</label>
                                    <div>
                                        @Html.DropDownListFor(m => m.BreweryId, (IEnumerable<SelectListItem>)ViewBag.Brewery, new { @id = "ddlBrewery", @class = "form-control", @readonly = "true" })
                                    </div>
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Brand Name<b style="color:red; font-weight:800">*</b></label>
                                    @Html.TextBoxFor(m => m.BrandName, new { @id = "txtBrandName", @class = "form-control", @required = "required", @MaxLength = "150" })

                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Brand Registration Number<b style="color:red; font-weight:800">*</b></label>
                                    <div>
                                        @Html.TextBoxFor(m => m.BrandRegistrationNumber, new { @id = "txtBrandRegistrationNumber", @class = "form-control", @required = "required", @MaxLength = "150" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="form-group  col-md-4">
                                    <label class="control-label">Strength of Alcohol<b style="color:red; font-weight:800">*</b></label>
                                    @if (UserSession.LoggedInUserLevelId.Trim() == "25")
                                    {
                                        <div class="row">
                                            <div class="form-group  col-md-6">
                                                 @Html.DropDownListFor(m=>m.Strength, new List<SelectListItem> { new SelectListItem { Text = "--Select--", Value = "-1" }, new SelectListItem { Text = "25%", Value = "25.000" }, new SelectListItem { Text = "36%", Value = "36.000" }, new SelectListItem { Text = "42.8%", Value = "42.800" } }, new { @id = "ddlAlcoholStrength", @class = "form-control " })
                                            </div>
                                            <div class="form-group  col-md-6">
                                                @Html.DropDownListFor(m => m.AlcoholType, new List<SelectListItem> { new SelectListItem { Text = "Spiced", Value = "Spiced" }, new SelectListItem { Text = "Plain", Value = "Plain" } }, new { @id = "ddlAlcoholType", @class = "form-control " })
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="row">
                                            <div class="form-group  col-md-6">
                                                @Html.TextBoxFor(m => m.Strength, new { @id = "txtStrength", @class = "form-control", onkeypress = "return isfloatNumber(this, event);", @required = "required", @MaxLength = "5" })
                                            </div>
                                            <div class="form-group  col-md-6">
                                                @Html.TextBoxFor(m => m.AlcoholType, new { @id = "txtAlcoholType", @class = "form-control", @readonly = "true" }) @*5 Mild And above Strong*@
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="form-group   col-md-4">
                                    <label class="control-label">Liquor Type</label>
                                    <div>
                                        @Html.DropDownListFor(m => m.LiquorType, (IEnumerable<SelectListItem>)ViewBag.LiquorType, new { @id = "ddlLiquorType", @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group   col-md-4">
                                    <label class="control-label">License Type</label>
                                    <div>
                                        @Html.DropDownListFor(m => m.LicenceType, (IEnumerable<SelectListItem>)ViewBag.LicenseType, new { @id = "ddlLicense", @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group   col-md-4">
                                    <label class="control-label">License No<b style="color:red; font-weight:800">*</b></label>
                                    <div>
                                        @Html.TextBoxFor(m => m.LicenceNo, new { @id = "txtLicenseNo", @class = "form-control", @required = "required", @MaxLength = "50" })
                                    </div>
                                </div>
                                <div class="form-group   col-md-4">
                                    <label class="control-label">Box-Size (Number of Bottles / Cans)<b style="color:red; font-weight:800">*</b></label>
                                    <div>
                                        @Html.TextBoxFor(m => m.QuantityInCase, new { @id = "txtQuantityInCase", @class = "form-control", @onkeyPress = "return IsNumeric(event);", @required = "required", @MaxLength = "5" })
                                    </div>
                                </div>
                                <div class="form-group   col-md-4">
                                    <label class="control-label">Capacity of Bottle/ Can (in ml.)<b style="color:red; font-weight:800">*</b></label>
                                    @if (UserSession.LoggedInUserLevelId.Trim() == "25")
                                    {
                                    <div>
                                        @Html.TextBoxFor(m => m.QuantityInBottleML, new { @id = "txtQuantityInBottleMLCL", @class = "form-control", @onkeyPress = "return IsNumeric(event);", @required = "required", @Value = "200", @readonly="true", @MaxLength = "5" })
                                    </div>
                                        }
                                        else
                                        {
                                        <div>
                                            @Html.TextBoxFor(m => m.QuantityInBottleML, new { @id = "txtQuantityInBottleML", @class = "form-control", @onkeyPress = "return IsNumeric(event);", @required = "required", @style = "display:none", @MaxLength = "5" })

                                            @Html.DropDownList("ddlQuantityInBottleML", new List<SelectListItem> { new SelectListItem { Text = "650", Value = "650", Selected = true }, new SelectListItem { Text = "500", Value = "500" }, new SelectListItem { Text = "330", Value = "330" } }, new { @id = "ddlQuantityInBottleML", @class = "form-control" })
                                        </div>
                                        }
                                    </div>

                            </div>
                            <div class="row">
                                <div class="form-group   col-md-4">
                                    <label class="control-label">Packaging Type</label>
                                    <div>
                                        @if (UserSession.LoggedInUserLevelId.Trim() == "25")
                                        {
                                            @Html.DropDownListFor(m => m.PackagingType, new List<SelectListItem> { new SelectListItem { Text = "Bottle", Value = "Bottle" }, new SelectListItem { Text = "Pet", Value = "Pet" } }, new { @id = "ddlPackagingType", @class = "form-control" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(m => m.PackagingType, new List<SelectListItem> { new SelectListItem { Text = "Can", Value = "Can" }, new SelectListItem { Text = "Bottle", Value = "Bottle" } }, new { @id = "ddlPackagingType", @class = "form-control" })

                                        }
                                    </div>
                                </div>
                                <div class="form-group   col-md-4">
                                    <label class="control-label">XFactoryPrice (Per Bottle/Can)<b style="color:red; font-weight:800">*</b></label>
                                    <div>
                                        @if (UserSession.LoggedInUserLevelId.Trim() == "25")
                                        {
                                            @Html.TextBoxFor(m => m.XFactoryPrice, new { @id = "txtXFactoryPrice", @class = "form-control", onkeypress = "return isfloatNumber(this, event);", @required = "required", @MaxLength = "5",@readonly="true" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(m => m.XFactoryPrice, new { @id = "txtXFactoryPrice", @class = "form-control", onkeypress = "return isfloatNumber(this, event);", @required = "required", @MaxLength = "5" })
                                        }
                                    </div>
                                </div>
                                <div class="form-group   col-md-4">
                                    <label class="control-label">Remark</label>
                                    <div>
                                        @Html.TextBoxFor(m => m.Remark, new { @id = "txtRemarks", @class = "form-control", @MaxLength = "100" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <table class="table table-striped table-bordered table-hover">
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.XFactoryPrice)</th>
                                        <th>@Html.DisplayNameFor(model => model.ConsiderationFees)</th>
                                        <th>@Html.DisplayNameFor(model => model.WHMargin)</th>
                                        <th>@Html.DisplayNameFor(model => model.WHPrice)</th>
                                        <th>@Html.DisplayNameFor(model => model.RetMargin)</th>
                                        <th>@Html.DisplayNameFor(model => model.MaxRetPrice)</th>
                                        <th>@Html.DisplayNameFor(model => model.MRP)</th>
                                        <th>Additional Consideration Fees@*@Html.DisplayNameFor(model => model.AdditionalDuty)*@</th>
                                        <th>@Html.DisplayNameFor(model => model.ExciseDuty)</th>
                                        <th>@Html.DisplayNameFor(model => model.OriginalRetPrice)</th>
                                    </tr>
                                    <tr>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.XFactoryPrice, new { @id = "lblXFactoryPrice", @class = "form-control", @readonly = "true" })</td>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.ConsiderationFees, new { @id = "lblConsiderationFees", @class = "form-control", @readonly = "true" })</td>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.WHMargin, new { @id = "lblWHMargin", @class = "form-control", @readonly = "true" })</td>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.WHPrice, new { @id = "lblWHPrice", @class = "form-control", @readonly = "true" })</td>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.RetMargin, new { @id = "lblRetMargin", @class = "form-control", @readonly = "true" })</td>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.MaxRetPrice, new { @id = "lblMaxRetPrice", @class = "form-control", @readonly = "true" })</td>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.MRP, new { @id = "lblMRP", @class = "form-control", @readonly = "true" })</td>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.AdditionalDuty, new { @id = "lblAdditionalDuty", @class = "form-control", @readonly = "true" })</td>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.ExciseDuty, new { @id = "lblExciseDuty", @class = "form-control", @readonly = "true" })</td>
                                        <td style="width:10%">@Html.TextBoxFor(m => m.OriginalRetPrice, new { @id = "lblOriginalRetPrice", @class = "form-control", @readonly = "true" })</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div style="clear:both"></div>
                        <center>
                            <div class="form-actions">
                                @if (Request.QueryString["Mode"] != null)
                                {
                                    if (Request.QueryString["Mode"].ToString().Trim() == "V")
                                    {
                                        <a href="@Url.Action("FinalizeBrand", "MasterForms",null)"><label class="btn blue">Back</label></a>
                                    }
                                    else
                                    {
                                        if (Model.BrandStatus == "P")
                                        {
                                            <button type="submit" class="btn green" onclick="return Validation();">Submit</button>
                                        }
                                        <button type="button" class="btn default" style="background-color: #659be0;color:white;border-color:#8E44AD" onclick="GetBrandDetail();">Go To Edit/Delete Brand</button>
                                        if (Model.BrandStatus == "P")
                                        {
                                            <button type="button" class="btn danger" style="background-color:crimson; color:white">Reset</button>
                                        }
                                    }
                                }
                                else
                                {
                                    if (Model.BrandStatus == "P")
                                    {
                                        <button type="submit" class="btn green" onclick="return Validation();">Submit</button>
                                    }
                                    <button type="button" class="btn default" style="background-color: #659be0;color:white;border-color:#8E44AD" onclick="GetBrandDetail();">Go To Edit/Delete Brand</button>
                                    if (Model.BrandStatus == "P")
                                    {
                                        <button type="button" class="btn danger" style="background-color:crimson; color:white">Reset</button>
                                    }
                                }
                            </div>
                        </center>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script type="text/javascript">
    function FillAlcoholStrength() {
        var ddlAlcoholType = $('#ddlAlcoholStrength').val();
        $("#ddlAlcoholType").empty();
        if (ddlAlcoholType.trim() == "25.000") {
            $("#ddlAlcoholType").append($("<option />").val("Spiced").text("Spiced"));
            $("#ddlAlcoholType").append($("<option />").val("Plain").text("Plain"));
        }
        else {
            $("#ddlAlcoholType").append($("<option />").val("Spiced").text("Spiced"));
        }
    }
    $('#ddlAlcoholStrength').change(function () {
        var ddlAlcoholType = $('#ddlAlcoholStrength').val();
        FillAlcoholStrength();
        $.ajax({
            url: '/MasterForms/GetDutyCalculation',
            data: { 'AlcoholStrength': ddlAlcoholType },
            datatype: "json",
            type: "GET",
            success: function (data) {
                document.getElementById("lblXFactoryPrice").value = data[1];
                document.getElementById("lblConsiderationFees").value = data[2];
                document.getElementById("lblWHMargin").value = data[3];
                document.getElementById("lblWHPrice").value = data[4];
                document.getElementById("lblRetMargin").value = data[5];
                document.getElementById("lblMaxRetPrice").value = data[6];
                document.getElementById("lblMRP").value = data[7];
                document.getElementById("lblAdditionalDuty").value = data[8];
                document.getElementById("lblExciseDuty").value = data[9];
                document.getElementById("lblOriginalRetPrice").value = data[10];
                document.getElementById("txtXFactoryPrice").value = data[1];
            },
            error: function (data) {
                alert("Error in Duty Calculation");
            }
        });
    })
    function GetBrandDetail() {
        var url = '@Url.Action("GetBrandDetails", "MasterForms", null)';
        window.location.href = url;
    }
    $('#ddlQuantityInBottleML').change(function () {
        var LiquorType = $('#ddlQuantityInBottleML').val();
        document.getElementById("txtQuantityInBottleML").value = LiquorType;
    });

    $('#txtStrength').change(function () {
        AlcoholCal();
    });
    $('#ddlState').change(function () {
        var LiquorType = $('#ddlState').val();
        if (LiquorType == "27") {
            if (document.getElementById("txtQuantityInBottleML") != null) {
                document.getElementById("txtQuantityInBottleML").value = 650;
                document.getElementById("txtQuantityInBottleML").style.display = "none";
                document.getElementById("ddlQuantityInBottleML").style.display = "";
            }
        }
        else {
            if (document.getElementById("txtQuantityInBottleML") != null) {
                document.getElementById("ddlQuantityInBottleML").style.display = "none";
                document.getElementById("txtQuantityInBottleML").style.display = "";
                document.getElementById("txtQuantityInBottleML").value = "0";
            }
        }
    });
    function AlcoholCal()
    {
        var AlcoPer = document.getElementById("txtStrength").value;
        if (AlcoPer > 5.0) {
            document.getElementById("txtAlcoholType").value = "Strong";
        }
        else { document.getElementById("txtAlcoholType").value = "Mild"; }
        MRPCal();
    }
    $('#txtXFactoryPrice').change(function () {
        MRPCal();
    });
    function MRPCal()
    {
        var MRP = 0, ConsidrationFees=0,FMRP=0;
        var MConsidrationFees = '@ViewBag.MConsidrationFees';
        var SConsidrationFees = '@ViewBag.SConsidrationFees';
        var MWholeSaleMargin = '@ViewBag.MWholeSaleMargin';
        var SWholeSaleMargin = '@ViewBag.SWholeSaleMargin';
        var MRetailerMargin = '@ViewBag.MRetailerMargin';
        var SRetailerMargin = '@ViewBag.SRetailerMargin';
        var txtXFactoryPrice = document.getElementById("txtXFactoryPrice").value;
        var AlcoPer = document.getElementById("txtStrength").value;
        if (txtXFactoryPrice != null && txtStrength != null && txtStrength != "" && txtXFactoryPrice != "" && txtXFactoryPrice != "0") {
            if (AlcoPer >5.0) {
                ConsidrationFees = (txtXFactoryPrice *  SConsidrationFees / 100).toFixed(2);
                document.getElementById("lblWHMargin").value = SWholeSaleMargin;
                document.getElementById("lblRetMargin").value = SRetailerMargin;
            }
            else {
                ConsidrationFees = (txtXFactoryPrice * MConsidrationFees / 100).toFixed(2);
                document.getElementById("lblWHMargin").value = MWholeSaleMargin;
                document.getElementById("lblRetMargin").value = SRetailerMargin;
            }
            FMRP = (Math.round(MRP / 10) * 10);
            document.getElementById("lblXFactoryPrice").value = txtXFactoryPrice;
            document.getElementById("lblConsiderationFees").value = ConsidrationFees;
            document.getElementById("lblWHPrice").value = (parseFloat(ConsidrationFees) + parseFloat(document.getElementById("lblWHMargin").value) + parseFloat(txtXFactoryPrice)).toFixed(2);
            document.getElementById("lblMaxRetPrice").value = (parseFloat(document.getElementById("lblWHPrice").value) + parseFloat(document.getElementById("lblRetMargin").value)).toFixed(2);
            document.getElementById("lblMRP").value = (Math.ceil(parseFloat(document.getElementById("lblMaxRetPrice").value) / 10) * 10);
            document.getElementById("lblAdditionalDuty").value = ((parseFloat(document.getElementById("lblMRP").value) - parseFloat(document.getElementById("lblMaxRetPrice").value))).toFixed(2);
            document.getElementById("lblExciseDuty").value = ((parseFloat(document.getElementById("lblAdditionalDuty").value) + parseFloat(document.getElementById("lblConsiderationFees").value))).toFixed(2);
            document.getElementById("lblOriginalRetPrice").value = (parseFloat(document.getElementById("lblAdditionalDuty").value) + parseFloat(document.getElementById("lblWHPrice").value));
        }
    }
</script>