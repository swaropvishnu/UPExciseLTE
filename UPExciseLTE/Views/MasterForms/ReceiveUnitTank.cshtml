@model UPExciseLTE.Models.UTTransferToBBT

@{
    ViewBag.Title = "Receive Wort Into Unit Tank";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script type="text/javascript">
$(document).ready(function () {
       $("#txtEntryDate").datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true
            });
    });
</script>
@using (Html.BeginForm("ReceiveUnitTank", "MasterForms", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    if (Model.Msg != null)
    {
        if (!string.IsNullOrEmpty(Model.Msg.MStatus))
        {
            <script type="text/javascript"> var msg = '@ViewBag.Msg'; alert(msg);</script>
            @*@Html.Partial("~/Views/Shared/_ErrorMessage.cshtml", Model.Msg)*@
        }
    }
    <div class="page-content-inner">
        <div class="row ">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <span><i class="fa fa-gift"></i>&nbsp;Receive Wort Into Unit Tank</span>
                        </div>
                    </div>
                    <div class="portlet-body form" style="background-color: #f5f5f5">
                        <div class="form-body">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    <label class="control-label">Batch Final Date</label>
                                    @Html.TextBoxFor(model => model.TransferDate1, new { @class = "form-control", @id = "txtEntryDate", @placeholder = "dd/MM/yyyy", @required = "required" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Unit Tank<b style="color:red; font-weight:800">*</b></label>
                                    @Html.DropDownListFor(model => model.IssuedFromUTId, (IEnumerable<SelectListItem>)ViewBag.UnitTank, new { @id = "ddlUnitTank", @class = "form-control", @required = "required", @placeholder = "dd/MM/yyyy" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Unit Tank Capacity (in Bulk Litre)</label>
                                    @Html.TextBoxFor(model => model.UnitTankCapacity, new { @class = "form-control", @id = "txtUnitTankCapacity", @readonly = "true" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4" style="display:none">
                                    <label class="control-label">Strength</label>
                                    @Html.TextBoxFor(m => m.Strength, new { @class = "form-control", @id = "txtUnitTankStrength", @readonly = "true" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Balance (in Bulk Litre)</label>
                                    @Html.TextBox("txtUnitTankBalance", "", new { @class = "form-control", @id = "txtUnitTankBalance", @readonly = "true" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Brand (In UT)</label>
                                    @Html.TextBox("txtUnitTankBrand", "", new { @class = "form-control", @id = "txtUnitTankBrand", @readonly = "true" })
                                    @Html.Hidden("hfUTBrandId", -1, new {@id="hfUTBrandID" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Brand<b style="color:red; font-weight:800">*</b></label>
                                    @Html.DropDownListFor(m => m.BrandID, (IEnumerable<SelectListItem>)ViewBag.Brand, new { @id = "ddlBrand", @class = "form-control" })
                                </div>
                            </div>
                            <div class="row">
                               
                                <div class="form-group col-md-4">
                                    <label class="control-label">Receive (in Bulk Litre)<b style="color:red; font-weight:800">*</b></label>
                                    @Html.TextBoxFor(model => model.IssueBL, new { @class = "form-control", @id = "txtUnitTankReceiveBL", onkeypress = "return isfloatNumber(this, event);", @required = "required", @maxlength = "10", @onkeyUp = "Calculation();" })
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <center>
                            <div class="form-actions">
                                <button type="submit" class="btn green" onclick="return Validation();">Submit</button>
                                <button type="button" class="btn danger" style="background-color:crimson; color:white">Reset</button>
                            </div>
                        </center>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script type="text/javascript">

    $('#ddlUnitTank').change(function () {
        var UnitTankId = $('#ddlUnitTank').val();
        if (UnitTankId != "-1") {
            UnitTankChange(UnitTankId);
        }
    });
    function Validation()
    {
        var UnitTankId = $('#ddlUnitTank').val();
        if (UnitTankId == "-1") {
            alert("Please Select Unit Tank");
            return false;
        }
        if (document.getElementById("txtUnitTankReceiveBL").value.trim() == "" || parseFloat(document.getElementById("txtUnitTankReceiveBL").value.trim()) <=0) {
            alert("Please Enter valid receive Quantity");
            return false; 
        }
    }
    function UnitTankChange(UnitTankId) {
        $.ajax({
            url: '/MasterForms/GetUnitTankForDDl',
            data: { 'UnitTankId': UnitTankId },
            datatype: "json",
            type: "GET",
            success: function (data) {
                var res = data.split(",");
                document.getElementById("txtUnitTankCapacity").value = res[0];
                document.getElementById("txtUnitTankStrength").value = res[1];
                document.getElementById("txtUnitTankBalance").value = res[2];
                document.getElementById("txtUnitTankBrand").value = res[4];
                document.getElementById("hfUTBrandId").value = res[3];
            },
            error: function (data) {
                alert("Error in GetBrandDetailsForDDl Loading");
            }
        });
    }
    function Calculation() {
        var ReceiveLtr = document.getElementById("txtUnitTankReceiveBL").value;
        var Balance = parseFloat(document.getElementById("txtUnitTankCapacity").value) - parseFloat(document.getElementById("txtUnitTankBalance").value);
        if (parseFloat(Balance) < parseFloat(ReceiveLtr)) {
            alert("Maximum Received Quantity is " + Balance)
            document.getElementById("txtUnitTankReceiveBL").value = Balance;
        }
    }
</script>
