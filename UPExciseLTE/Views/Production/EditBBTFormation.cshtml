@model UPExciseLTE.Models.BBTFormation
@{
    ViewBag.Title = "EditBBTFormation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("EditBBTFormation", "Production", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.BBTId, 0)
    @Html.Hidden("SP_Type", 1)
    if (Model != null)
    {
        if (!string.IsNullOrEmpty(Model.Message.MStatus))
        {
            @Html.Partial("~/Views/Shared/_ErrorMessage.cshtml", Model.Message)
        }
    }
    <div class="page-content-inner">
        <div class="row ">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>BBT Formation
                        </div>
                    </div>
                    <div class="portlet-body form" style="background-color:#f5f5f5">
                        <div class="form-body">
                            <div class="row">
                                <div class="form-group  col-md-4">
                                    <label class="control-label">Brand Name</label>
                                    <div>
                                        @Html.DropDownListFor(m => m.BrandID, (IEnumerable<SelectListItem>)ViewBag.Brands, new { @id = "ddlBrand", @class = "form-control" })
                                    </div>
                                </div>

                                <div class="form-group  col-md-4">
                                    <label class="control-label">Liquor Type</label>
                                    <div>
                                        @Html.TextBoxFor(m => m.LiquorType, new { @id = "txtLiquorType", @class = "form-control", @required = "required", @readonly = true, @Placeholder = "Liquor Type" })
                                    </div>
                                </div>

                                <div class="form-group  col-md-4">
                                    <label class="control-label">Licence Type</label>
                                    <div>
                                        @Html.TextBoxFor(m => m.LicenseType, new { @id = "txtLicenseType", @class = "form-control", @required = "required", @readonly = true, @Placeholder = "License Type" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">

                                <div class="form-group  col-md-4">
                                    <label class="control-label">BBT Name</label>
                                    <div>
                                        @Html.TextBoxFor(m => m.BBTName, new { @id = "txtBBTName", @class = "form-control", @required = "required", @Placeholder = "BBT Name" })
                                    </div>
                                </div>

                                <div class="form-group  col-md-4">
                                    <label class="control-label">BBT Capacity</label>
                                    <div>

                                        @Html.TextBoxFor(m => m.BBTCapacity, new { @id = "txtBBTCapacity", @class = "form-control", @required = "required", @Placeholder = "BBT Capacity", @onkeyPress = "return IsNumeric(event);" })

                                    </div>
                                </div>

                                <div class="form-group  col-md-4">
                                    <label class="control-label">Opening Balance(BL)</label>
                                    <div>
                                        @Html.TextBoxFor(m => m.BBTBulkLiter, new { @id = "txtBBTBulkLiter", @class = "form-control", @required = "required", @Placeholder = "BBT Opening Balance", @onkeypress = "return isfloatNumber(this, event);" })
                                    </div>
                                </div>

                            </div>

                        </div>
                        <div style="clear:both"></div>
                        <center>
                            <div class="form-actions">
                                <button type="submit" class="btn green">Save</button>
                                @*<button type="button" class="btn danger" style="background-color:crimson; color:white">Reset</button>
                                    <button type="button" class="btn default" style="background-color: #659be0;color:white;border-color:#8E44AD" onclick="GetBrandDetail();">Go to Brand Details</button>*@
                            </div>
                        </center>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<script src="~/Scripts/CommonScript.js"></script>
<script>


    $("#danger-alert").show();
    $("#danger-alert").fadeTo(3000, 500).slideUp(500, function () {
        $("#danger-alert").slideUp(500);
    });


    $("#ddlBrand").change(function () {
        debugger;
        var brandID = $("#ddlBrand").val();
        if(brandID!="-1")
        {
            BBTFormationBrandChange(brandID);
        }
    });

    function BBTFormationBrandChange(brandID)
    {
        $.ajax({
            url: '@Url.Action("GetBrandDetailsForDDl", "MasterForms", null)',
            type:'GET',
            data:{BrandId:brandID},
            datatype:"json",
            success:function(data){
                debugger;
                var res=data.split(",");
                document.getElementById("txtLiquorType").value=res[0];
                document.getElementById("txtLicenseType").value=res[1];
            },
            error:function(data){
                alert("Error has occurred.");
            }
        });
    }

    var specialKeys = new Array();
    specialKeys.push(47); // for Forward Slash(/)
    specialKeys.push(8); //Backspace
    specialKeys.push(9); // Tab
    specialKeys.push(37); // for left Arrow
    //  specialKeys.push(39); // for Right Arrow
    function IsNumeric(e) {
        var keyCode = e.which ? e.which : e.keyCode
        var ret = ((keyCode >= 48 && keyCode <= 57) || specialKeys.indexOf(keyCode) != -1); // For Decimal To All Number
        if (ret == false) {
            //alert("Only numaric value allowed.");
        }
        return ret;
    }
    function isfloatNumber(txt, evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode == 46) {
            //Check if the text already contains the . character
            if (txt.value.indexOf('.') === -1) {
                return true;
            } else {
                return false;
            }
        } else {
            if (charCode > 31
                 && (charCode < 48 || charCode > 57))
                return false;
        }
        return true;
    }

</script>

